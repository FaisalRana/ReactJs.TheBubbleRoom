{"version":3,"sources":["components/Header.js","components/ReusableForm.js","components/NewSodaForm.js","components/SodaDetail.js","components/Soda.js","components/SodaInventory.js","components/EditSodaForm.js","components/SodaControl.js","components/App.js","index.js"],"names":["Header","style","width","size","fontFamily","fontSize","color","className","ReusableForm","props","soda","Fragment","onSubmit","formSubmissionHandler","type","name","defaultValue","slogan","sugarType","price","quantity","buttonText","placeholder","NewSodaForm","event","preventDefault","onNewSodaCreation","target","value","parseInt","moneyMade","id","v4","SodaDetail","show","pageVisible","onClick","editButtonClick","deleteButtonClick","buttonText1","buyButtonClick","salePrice","buttonStateFunc","buttonState","instructions","prototypes","PropTypes","object","string","func","Soda","sodaSelected","SodaInventory","box","border","padding","margin","mainSodaInventory","map","SodaSelected","key","EditSodaForm","onEditSoda","SodaControl","handleButtonClick","state","selectedSoda","setState","formVisibleOnPage","editButtonPressed","prevState","handleManageButtonClick","handleBuySoda","newMasterSodaInventory","masterSodaInventory","filter","concat","handleSelectedSoda","newSelectedSoda","handleNewSodaCreation","handlePriceThing","int","handleEditSodaCreation","handleEditButton","handleHomeButton","handleSellButtonClick","handleDeleteButton","currentlyVisibleState","this","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec8e7f51.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  const headerStyle = {\n    width: '100%',\n    size: '400',\n    fontFamily: 'spaceFont',\n    fontSize: 60,\n    color: 'yellow'\n  }\n\n  return (\n    <div style={headerStyle}>\n      <div className=\"row\">\n          <div className=\"column\"> <span className=\"header1\"> The International</span> <span className=\"header2\">Pepsi<sup>Â®</sup> Station </span></div>\n          </div>\n        </div>\n  );\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from \"prop-types\"\n\n\nexport default function ReusableForm(props) {\n  if (props.soda) {\n    return (\n      <React.Fragment>\n        <form onSubmit={props.formSubmissionHandler}>\n          <input type='text' name='name' defaultValue={props.soda.name} />\n          <input type='text' name='slogan' defaultValue={props.soda.slogan} />\n          <input type='text' name='sugarType' defaultValue={props.soda.sugarType} />\n          <input type='number' name='price' defaultValue={props.soda.price} />\n          <input type='number' name='quantity' defaultValue={props.soda.quantity} />\n          <button type='submit'>{props.buttonText}</button>\n        </form>\n      </React.Fragment>\n    )\n  } else {\n    return (\n      <React.Fragment>\n        <form onSubmit={props.formSubmissionHandler}>\n          <input type='text' name='name' placeholder='Name' />\n          <input type='text' name='slogan' placeholder='Slogan' />\n          <input type='text' name='sugarType' placeholder='sugarType' />\n          <input type='number' name='price' placeholder='Price' />\n          <input type='number' name='quantity' placeholder='Quantity' />\n          <button type='submit'>{props.buttonText}</button>\n        </form>\n      </React.Fragment>\n    )\n  }\n}\n\nReusableForm.propTypes = {\n  soda: PropTypes.object,\n  formSubmissionHandler: PropTypes.func,\n  buttonText: PropTypes.string\n}\n","\nimport React from 'react';\nimport { v4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport ReusableForm from \"./ReusableForm\";\n\nexport default function NewSodaForm(props) {\n\n  function handleNewSodaFormSubmission(event) {\n    event.preventDefault();\n    props.onNewSodaCreation({ name: event.target.name.value, slogan: parseInt(event.target.slogan.value), sugarType: event.target.sugarType.value, price: parseInt(event.target.price.value), quantity: parseInt(event.target.quantity.value), moneyMade: 0, id: v4() })\n  }\n\n  return (\n    <React.Fragment>\n      <ReusableForm formSubmissionHandler={handleNewSodaFormSubmission} buttonText=\"Add the Soda\" />\n    </React.Fragment>\n  );\n}\n\nNewSodaForm.propTypes = {\n  onNewSodaCreation: PropTypes.func\n};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction SodaDetail(props) {\n\n  function handleBuy(event) {\n\n    event.preventDefault();\n    props.buyButtonClick({\n      name: props.soda.name, slogan: props.soda.slogan, sugarType: props.soda.sugarType,\n      price: props.soda.price, quantity: props.soda.quantity - event.target.quantity.value,\n      moneyMade: props.soda.moneyMade + (event.target.quantity.value * props.soda.price), salePrice: \"+\" + event.target.quantity.value * props.soda.price, id: props.soda.id\n    })\n    props.buttonStateFunc(event.target.quantity.value * props.soda.price)\n  }\n\n  let show = null;\n\n  if (props.pageVisible === \"manage\") {\n    show = <div>\n      <p><button onClick={props.editButtonClick}>{props.buttonText}</button></p>\n      <p><button onClick={() => props.deleteButtonClick(props.soda.id)}>{props.buttonText1}</button></p>\n    </div>\n  } else {\n    show = <div>\n      <form onSubmit={handleBuy}>\n        Quanity you want:\n        <input type='number' name='quantity' placeholder='Quanity'></input>\n        <button type='submit'>{props.buttonText}</button>\n      </form>\n    </div>\n  }\n  return (\n    <React.Fragment>\n      <div className=\"sodalist\">\n        <div className=\"row\">\n          <div className=\"column\">\n            <h2>{props.soda.name}</h2>\n            <p><em>{props.soda.slogan}</em>  </p>\n            <p>Sugar Type: {props.soda.sugarType}</p>\n            <p>Price: {props.soda.price}</p>\n            <p>Quantity: {props.soda.quantity}</p>\n            <p>Money Made: ${props.soda.moneyMade}</p>\n            {props.buttonState}\n          </div>\n          <div className=\"column\">\n            <div className = \"box\">\n            {props.instructions}\n            {show}\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </React.Fragment >\n  );\n\n}\n\nSodaDetail.prototypes = {\n  soda: PropTypes.object,\n  buttonText: PropTypes.string,\n  editButtonClick: PropTypes.func,\n  deleteButtonClick: PropTypes.func,\n  buttonText1: PropTypes.string,\n  buyButtonClick: PropTypes.func,\n  pageVisible: PropTypes.string,\n  buttonStateFunc: PropTypes.func,\n  buttonState: PropTypes.string\n}\n\nexport default SodaDetail;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Soda(props) {\n  return (\n    <React.Fragment>\n      <div className =\"box\">\n        <div onClick={() => props.sodaSelected(props.id)}>\n          <h2>{props.name}</h2>\n          <p><em>{props.slogan}</em></p>\n          <p>Sweetner: {props.sugarType}</p>\n          <p>Price: ${props.price}</p>\n          <p>Quantity Available: {props.quantity}</p>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nSoda.propTypes = { // lower camel case because its a property here\n  name: PropTypes.string.isRequired,\n  slogan: PropTypes.number, // upper camel case because its reffering to the library\n  sugarType: PropTypes.string,\n  price: PropTypes.number,\n  quantity: PropTypes.number.isRequired,\n  SodaSelected: PropTypes.func\n};\n\nexport default Soda;","import React from 'react';\nimport Soda from \"./Soda\";\nimport PropTypes from \"prop-types\";\n\n\n\n\n\nfunction SodaInventory(props) {\n  const box = {\n    border: 'dashed grey',\n    padding: \"10px\",\n    margin: \"10px\"\n  }\n\n  return (\n    <React.Fragment>\n    <div className=\"row\">\n      <div className=\"column\">\n       \n      \n        <p>{props.instructions}</p>\n        \n      </div>\n\n    <div className=\"column\">\n    {props.mainSodaInventory.map((soda) =>\n        <div style = {box}>\n          <Soda style={box}\n            sodaSelected={props.SodaSelected}\n            name={soda.name}\n            slogan={soda.slogan}\n            sugarType={soda.sugarType}\n            price={soda.price}\n            quantity={soda.quantity}\n            id={soda.id}\n            key={soda.id} />\n        </div>\n        )\n    }\n    </div>\n    </div>\n    </React.Fragment>\n  )\n}\n\nSodaInventory.propTypes = {\n  mainsodaInventory: PropTypes.array,\n  sodaSelected: PropTypes.func\n}\n\nexport default SodaInventory","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ReusableForm from './ReusableForm'\n\n\n\nfunction EditSodaForm(props) {\n  const { soda } = props\n  function handleEditSodaFormSubmission(event) {\n    event.preventDefault();\n    props.onEditSoda({ name: event.target.name.value, slogan: parseInt(event.target.slogan.value), sugarType: event.target.sugarType.value, price: parseInt(event.target.price.value), quantity: parseInt(event.target.quantity.value), moneyMade: soda.moneyMade, id: soda.id })\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"sodalist\">\n        <b>{soda.name}'s Ticket</b>\n        <p> <em></em> {soda.slogan} </p>\n        <li>Sugar Type: {soda.sugarType}</li>\n        <li>Price: {soda.price}</li>\n        <li>Quantity: {soda.quantity}</li>\n        <ReusableForm\n          soda={soda}\n          formSubmissionHandler={handleEditSodaFormSubmission}\n          buttonText=\"Update Soda\" />\n      </div>\n    </React.Fragment >\n  )\n}\n\nEditSodaForm.propTypes = {\n  soda: PropTypes.object,\n  onEditSoda: PropTypes.func\n}\n\nexport default EditSodaForm","import React from 'react';\nimport NewSodaForm from './NewSodaForm';\nimport SodaDetail from './SodaDetail';\nimport SodaInventory from './SodaInventory';\nimport EditSodaForm from './EditSodaForm';\n\n\nclass SodaControl extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      formVisibleOnPage: false,\n      masterSodaInventory: [\n        {\n          name: \"Pepsi Cola\",\n          slogan: \"That's What I Like\",\n          sugarType: \"Corn Syrup\",\n          price: 1.50,\n          quantity: 100,\n          moneyMade: 0,\n          id: 1\n        }\n      ],\n      selectedSoda: null,\n      editButtonPressed: false,\n      pageVisible: \"home\",\n      buttonState: null\n    };\n  }\n\n  handleButtonClick = () => {\n    if (this.state.selectedSoda != null) {\n      this.setState({\n        formVisibleOnPage: false,\n        selectedSoda: null,\n        editButtonPressed: false\n      })\n    } else {\n      this.setState(prevState => (\n        { formVisibleOnPage: !prevState.formVisibleOnPage }));\n    }\n  }\n  handleManageButtonClick = () => {\n    this.setState({\n      pageVisible: \"manage\"\n    })\n  }\n\n  handleBuySoda = (Soda) => {\n    const newMasterSodaInventory = this.state.masterSodaInventory.filter(Soda => Soda.id !== this.state.selectedSoda.id).concat(Soda)\n    this.setState({\n      masterSodaInventory: newMasterSodaInventory,\n      selectedSoda: Soda\n    })\n  }\n  handleSelectedSoda = (id) => {\n    const newSelectedSoda = this.state.masterSodaInventory.filter(Soda => Soda.id === id)[0]\n    this.setState({ selectedSoda: newSelectedSoda })\n  }\n\n  handleNewSodaCreation = (Soda) => {\n    const newMasterSodaInventory = this.state.masterSodaInventory.concat(Soda);\n    this.setState({\n      masterSodaInventory: newMasterSodaInventory,\n      formVisibleOnPage: false\n    })\n  }\n\n  handlePriceThing = (int) => {\n    this.setState({\n      buttonState: <div className=\"saleprice\">+${int}</div>\n    })\n  }\n\n\n  handleEditSodaCreation = (Soda) => {\n    const newMasterSodaInventory = this.state.masterSodaInventory.filter(Soda => Soda.id !== this.state.selectedSoda.id).concat(Soda)\n    this.setState({\n      masterSodaInventory: newMasterSodaInventory,\n      // formVisibleOnPage: false,\n      editButtonPressed: false,\n      selectedSoda: Soda\n    })\n\n  }\n  handleEditButton = () => {\n    this.setState({ editButtonPressed: true })\n  }\n\n  handleHomeButton = () => {\n    this.setState({\n      pageVisible: \"home\",\n      selectedSoda: null,\n      editButtonPressed: false,\n      formVisibleOnPage: false\n    })\n  }\n\n  handleSellButtonClick = () => {\n    this.setState({ pageVisible: \"sellPage\" })\n  }\n\n  handleDeleteButton = (id) => {\n    const newMasterSodaInventory = this.state.masterSodaInventory.filter(Soda => Soda.id !== id);\n    this.setState({\n      formVisibleOnPage: false,\n      masterSodaInventory: newMasterSodaInventory,\n      selectedSoda: null\n    })\n\n  }\n\n  render() {\n    let currentlyVisibleState = null;\n    let buttonText = null;\n    let instructions = null;\n    if (this.state.pageVisible === \"manage\") {\n      if (this.state.editButtonPressed) {\n        currentlyVisibleState = <EditSodaForm onEditSoda={this.handleEditSodaCreation} soda={this.state.selectedSoda} />\n        buttonText = \"Return to Soda Inventory\";\n      }\n      else if (this.state.formVisibleOnPage) {\n        currentlyVisibleState = <NewSodaForm onNewSodaCreation={this.handleNewSodaCreation} />;\n        buttonText = \"Return to Soda Inventory\";\n      } else if (this.state.selectedSoda != null) {\n        currentlyVisibleState = <SodaDetail soda={this.state.selectedSoda} pageVisible={this.state.pageVisible} editButtonClick={this.handleEditButton} deleteButtonClick={this.handleDeleteButton} buttonText=\"Edit Soda\" buttonText1=\"Delete Soda\" />\n        buttonText = \"Return to Soda Inventory\";\n      }\n      else {\n        instructions = \"Click to see details\"\n        currentlyVisibleState = <SodaInventory  instructions={instructions} mainSodaInventory={this.state.masterSodaInventory} SodaSelected={this.handleSelectedSoda} />\n        buttonText = \"Add Soda to Inventory\";\n      }\n\n      return (\n        <React.Fragment>\n          {currentlyVisibleState}\n          <p><button onClick={this.handleButtonClick}>{buttonText}</button></p>\n          <p><button onClick={this.handleHomeButton}>Go back Home</button></p>\n        </React.Fragment>\n      )\n    }\n\n    else if (this.state.pageVisible === \"sellPage\") {\n      if (this.state.selectedSoda != null) {\n        instructions = \"\"\n        currentlyVisibleState = <SodaDetail instructions={instructions} SodaDetail buttonState={this.state.buttonState} buttonStateFunc={this.handlePriceThing} soda={this.state.selectedSoda} buyButtonClick={this.handleBuySoda} pageVisible={this.state.pageVisible} buttonText=\"Sell Soda\" />\n        buttonText = \"Return to Soda Inventory\";\n      }\n      else {\n        instructions = \"Click to see details\"\n        currentlyVisibleState = <SodaInventory  instructions={instructions} mainSodaInventory={this.state.masterSodaInventory} SodaSelected={this.handleSelectedSoda} />\n        buttonText = \"Add Soda to Inventory\";\n      }\n      return (\n        <React.Fragment>\n          {currentlyVisibleState}\n          <p> <button onClick={this.handleHomeButton}>Go back Home</button></p>\n        </React.Fragment>\n      )\n\n    }\n\n\n\n    else {\n      return (\n        <React.Fragment>\n          <p>Please Select <b> Manage </b>Sodas or <b> Sell </b>Sodas</p>\n          <button onClick={this.handleManageButtonClick}>Manage Soda Inventory</button>\n          <button onClick={this.handleSellButtonClick}>Sell Soda</button>\n        </React.Fragment>\n      )\n\n\n    }\n\n  }\n}\n\nexport default SodaControl;","import React from \"react\";\nimport Header from \"./Header\";\nimport SodaControl from \"./SodaControl\";\n\n\nfunction App(){\n  return (\n    <React.Fragment>\n      <Header />\n      <h1><SodaControl/></h1>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}